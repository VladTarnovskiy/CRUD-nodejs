import{createRequire as e}from"node:module";var t={56:e=>{e.exports=JSON.parse('{"name":"dotenv","version":"16.5.0","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","pretest":"npm run lint && npm run dts-check","test":"tap run --allow-empty-coverage --disable-coverage --timeout=60000","test:coverage":"tap run --show-full-coverage --timeout=60000 --coverage-report=lcov","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"homepage":"https://github.com/motdotla/dotenv#readme","funding":"https://dotenvx.com","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@types/node":"^18.11.3","decache":"^4.6.2","sinon":"^14.0.1","standard":"^17.0.0","standard-version":"^9.5.0","tap":"^19.2.0","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')},857:t=>{t.exports=e(import.meta.url)("os")},896:t=>{t.exports=e(import.meta.url)("fs")},928:t=>{t.exports=e(import.meta.url)("path")},982:t=>{t.exports=e(import.meta.url)("crypto")},998:(e,t,r)=>{const o=r(896),n=r(928),s=r(857),a=r(982),i=r(56).version,c=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function l(e){console.log(`[dotenv@${i}][DEBUG] ${e}`)}function f(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function p(e,t){let r;try{r=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code){const e=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw e.code="INVALID_DOTENV_KEY",e}throw e}const o=r.password;if(!o){const e=new Error("INVALID_DOTENV_KEY: Missing key part");throw e.code="INVALID_DOTENV_KEY",e}const n=r.searchParams.get("environment");if(!n){const e=new Error("INVALID_DOTENV_KEY: Missing environment part");throw e.code="INVALID_DOTENV_KEY",e}const s=`DOTENV_VAULT_${n.toUpperCase()}`,a=e.parsed[s];if(!a){const e=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);throw e.code="NOT_FOUND_DOTENV_ENVIRONMENT",e}return{ciphertext:a,key:o}}function d(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(const r of e.path)o.existsSync(r)&&(t=r.endsWith(".vault")?r:`${r}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=n.resolve(process.cwd(),".env.vault");return o.existsSync(t)?t:null}function u(e){return"~"===e[0]?n.join(s.homedir(),e.slice(1)):e}const g={configDotenv:function(e){const t=n.resolve(process.cwd(),".env");let r="utf8";const s=Boolean(e&&e.debug);e&&e.encoding?r=e.encoding:s&&l("No encoding is specified. UTF-8 is used by default");let a,i=[t];if(e&&e.path)if(Array.isArray(e.path)){i=[];for(const t of e.path)i.push(u(t))}else i=[u(e.path)];const c={};for(const t of i)try{const n=g.parse(o.readFileSync(t,{encoding:r}));g.populate(c,n,e)}catch(e){s&&l(`Failed to load ${t} ${e.message}`),a=e}let f=process.env;return e&&null!=e.processEnv&&(f=e.processEnv),g.populate(f,c,e),a?{parsed:c,error:a}:{parsed:c}},_configVault:function(e){Boolean(e&&e.debug)&&l("Loading env from encrypted .env.vault");const t=g._parseVault(e);let r=process.env;return e&&null!=e.processEnv&&(r=e.processEnv),g.populate(r,t,e),{parsed:t}},_parseVault:function(e){const t=d(e),r=g.configDotenv({path:t});if(!r.parsed){const e=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw e.code="MISSING_DATA",e}const o=f(e).split(","),n=o.length;let s;for(let e=0;e<n;e++)try{const t=p(r,o[e].trim());s=g.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=n)throw t}return g.parse(s)},config:function(e){if(0===f(e).length)return g.configDotenv(e);const t=d(e);return t?g._configVault(e):(r=`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`,console.log(`[dotenv@${i}][WARN] ${r}`),g.configDotenv(e));var r},decrypt:function(e,t){const r=Buffer.from(t.slice(-64),"hex");let o=Buffer.from(e,"base64");const n=o.subarray(0,12),s=o.subarray(-16);o=o.subarray(12,-16);try{const e=a.createDecipheriv("aes-256-gcm",r,n);return e.setAuthTag(s),`${e.update(o)}${e.final()}`}catch(e){const t=e instanceof RangeError,r="Invalid key length"===e.message,o="Unsupported state or unable to authenticate data"===e.message;if(t||r){const e=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw e.code="INVALID_DOTENV_KEY",e}if(o){const e=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw e.code="DECRYPTION_FAILED",e}throw e}},parse:function(e){const t={};let r,o=e.toString();for(o=o.replace(/\r\n?/gm,"\n");null!=(r=c.exec(o));){const e=r[1];let o=r[2]||"";o=o.trim();const n=o[0];o=o.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===n&&(o=o.replace(/\\n/g,"\n"),o=o.replace(/\\r/g,"\r")),t[e]=o}return t},populate:function(e,t,r={}){const o=Boolean(r&&r.debug),n=Boolean(r&&r.override);if("object"!=typeof t){const e=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw e.code="OBJECT_REQUIRED",e}for(const r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(!0===n&&(e[r]=t[r]),o&&l(!0===n?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=t[r]}};e.exports.configDotenv=g.configDotenv,e.exports._configVault=g._configVault,e.exports._parseVault=g._parseVault,e.exports.config=g.config,e.exports.decrypt=g.decrypt,e.exports.parse=g.parse,e.exports.populate=g.populate,e.exports=g}},r={};function o(e){var n=r[e];if(void 0!==n)return n.exports;var s=r[e]={exports:{}};return t[e](s,s.exports,o),s.exports}var n=o(998);const s=e(import.meta.url)("http"),a="/api/users",i={message:"User doesn't exist!"},c={message:"Invalid request!"},l={message:"Invalid input data!"},f={message:"Invalid uuid!"},p={message:"Server Error"},d=e(import.meta.url)("node:fs/promises"),u=e(import.meta.url)("url");var g=o(928);const h=(0,u.fileURLToPath)("file:///D:/rsschool/CRUD-nodejs/src/data/createUser.ts"),m=(0,g.dirname)(h),v=e(import.meta.url)("fs/promises"),E=async()=>{const e=(0,g.join)((0,g.dirname)((0,u.fileURLToPath)("file:///D:/rsschool/CRUD-nodejs/src/data/getCurrentData.ts")),"data.json"),t=await(0,v.readFile)(e,{encoding:"utf8"});try{return JSON.parse(t)}catch(e){throw e}},y=(0,u.fileURLToPath)("file:///D:/rsschool/CRUD-nodejs/src/data/updateUser.ts"),w=(0,g.dirname)(y);n.config(),process.env.PORT;const D=async e=>new Promise(((t,r)=>{try{let r="";e.on("data",(e=>{r+=e})),e.on("end",(()=>{if(r){const e=JSON.parse(r);t(e)}t("")}))}catch(e){r(e)}})),N=e=>{const t=e.split("/");return t[3]&&4===t.length?t[3]:""},b=e=>["username","age","hobbies"].every((t=>Boolean(e[t])))&&Array.isArray(e.hobbies);var _=o(982);const T={randomUUID:_.randomUUID},O=new Uint8Array(256);let I=O.length;const V=[];for(let e=0;e<256;++e)V.push((e+256).toString(16).slice(1));const U=function(e,t,r){if(T.randomUUID&&!t&&!e)return T.randomUUID();const o=(e=e||{}).random??e.rng?.()??(I>O.length-16&&((0,_.randomFillSync)(O),I=0),O.slice(I,I+=16));if(o.length<16)throw new Error("Random bytes length must be >= 16");if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t){if((r=r||0)<0||r+16>t.length)throw new RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`);for(let e=0;e<16;++e)t[r+e]=o[e];return t}return function(e,t=0){return(V[e[t+0]]+V[e[t+1]]+V[e[t+2]]+V[e[t+3]]+"-"+V[e[t+4]]+V[e[t+5]]+"-"+V[e[t+6]]+V[e[t+7]]+"-"+V[e[t+8]]+V[e[t+9]]+"-"+V[e[t+10]]+V[e[t+11]]+V[e[t+12]]+V[e[t+13]]+V[e[t+14]]+V[e[t+15]]).toLowerCase()}(o)},j=(e,t,r)=>(r.writeHead(e,{"Content-type":"application/json"}),r.end(JSON.stringify(t))),x=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i,R=function(e){return"string"==typeof e&&x.test(e)},A=(0,u.fileURLToPath)("file:///D:/rsschool/CRUD-nodejs/src/data/deleteUser.ts"),S=(0,g.dirname)(A);n.config();const $=process.env.PORT||3e3,L=(0,s.createServer)(((e,t)=>{try{switch(e.method){case"GET":(async(e,t)=>{const r=N(e.url),o=await E();if(e.url===a)j(200,o,t);else if(e.url?.startsWith(a)&&r){const e=o.filter((e=>e.id===r));R(r)?e.length>0?j(200,e,t):j(404,i,t):j(400,f,t)}else j(404,c,t)})(e,t);break;case"POST":(async(e,t)=>{try{if(e.url===a){const r=await D(e);b(r)?(r.id=U(),(async e=>{try{const t=await E(),r=(0,g.join)(m,"data.json");await(0,d.writeFile)(r,JSON.stringify([...t,e]))}catch(e){throw new Error}})(r),j(200,r,t)):j(404,l,t)}else j(404,c,t)}catch{throw new Error}})(e,t);break;case"PUT":(async(e,t)=>{const r=N(e.url),o=await E();if(e.url?.startsWith(a)&&r){const n=o.filter((e=>e.id===r)),s=await D(e);if(R(r))if(b(s))if(n.length>0){const e={...s,id:r};(async e=>{try{const t=(await E()).map((t=>t.id===e.id?e:t)),r=(0,g.join)(w,"data.json");await(0,d.writeFile)(r,JSON.stringify(t))}catch(e){throw new Error}})(e),j(200,e,t)}else j(404,i,t);else j(404,l,t);else j(400,f,t)}else j(404,c,t)})(e,t);break;case"DELETE":(async(e,t)=>{const r=N(e.url),o=await E();if(e.url?.startsWith(a)&&r){const e=o.find((e=>e.id!==r));R(r)?e?((async e=>{try{const t=(await E()).filter((t=>t.id!==e)),r=(0,g.join)(S,"data.json");await(0,d.writeFile)(r,JSON.stringify(t))}catch(e){throw new Error}})(r),j(204,e,t)):j(404,i,t):j(400,f,t)}else j(404,c,t)})(e,t)}}catch{j(500,p,t)}}));L.listen($,(()=>console.log(`Server started on PORT ${$}`))),process.on("SIGINT",(async()=>{L.close((()=>process.exit()))}));